version: '3.4'

services:
  mongoDatabase:
    restart: always
    container_name: mongoDb
    image: mongo:latest
    environment:
        MONGO_INITDB_ROOT_USERNAME: root
        MONGO_INITDB_ROOT_PASSWORD: rootPassword
    volumes:
       - ./mongoDatabase:/data/db
    ports:
      - "27017:27017"
  database:
    restart: always
    container_name: database
    image: mysql:latest
    environment:
        MYSQL_ROOT_PASSWORD: admin
    volumes:
       - ./Database:/var/lib/mysql
    ports:
      - "4000:3306"
  resourceconfiguration.api:
    image: ${DOCKER_REGISTRY-}resourceconfigurationapi
    environment:
        MYSQLCONNSTR_CONN:"Server=127.0.0.1;user id=root;password=admin;database=news_aggregator_resource;"
    build:
      context: .
      dockerfile: Services/ResourceConfiguration/ResourceConfiguration.API/Dockerfile
  user.api:
    image: ${DOCKER_REGISTRY-}userapi
    environment:
        MYSQLCONNSTR_CONN:"Server=127.0.0.1;user id=root;password=admin;database=news_aggregator_user;"
    build:
      context: .
      dockerfile: Services/User/User.API/Dockerfile
  news.api:
    image: ${DOCKER_REGISTRY-}newsapi
    environment:
        MYSQLCONNSTR_CONN:"Server=127.0.0.1;user id=root;password=admin;database=news_aggregator_data;"
    build:
      context: .
      dockerfile: Services/News/News.API/Dockerfile
  collector.api:
    image: ${DOCKER_REGISTRY-}collectorapi
    environment:
        DATABASE_HOST:"127.0.0.1"
        DATABASE_USER:"root"
        DATABASE_PASSWORD:"admin"
        DATABASE_NAME:"news_aggregator_data"
    build:
      context: .
      dockerfile: Services/NewsSimilarity/Dockerfile
